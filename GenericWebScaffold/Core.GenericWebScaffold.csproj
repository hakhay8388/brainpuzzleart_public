<Project Sdk="Microsoft.NET.Sdk.Web">

 
	<PropertyGroup>
		<TargetFramework>netcoreapp3.0</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<ApplicationIcon />
		<OutputType>WinExe</OutputType>
		<LangVersion>preview</LangVersion>
		<StartupObject />
	</PropertyGroup>
	<ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.0.0" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.5.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.8" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.0.0" />
    <PackageReference Include="Unity" Version="5.11.5" />
	</ItemGroup> 
  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <ApplicationIcon />
    <OutputType>WinExe</OutputType>
    <StartupObject />
    <UserSecretsId>1873ce46-37cb-4af3-9fba-2458e9982edf</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <AssemblyName>Core.GenericWebScaffold</AssemblyName>
  </PropertyGroup> 
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup> 
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;DEBUG</DefineConstants>
  </PropertyGroup> 

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Compile Remove="ClientApp\build\**" />
		<Compile Remove="ClientApp\src\NewFolder\**" />
		<Content Remove="$(SpaRoot)**" />
		<Content Remove="ClientApp\build\**" />
		<Content Remove="ClientApp\src\NewFolder\**" />
		<EmbeddedResource Remove="ClientApp\build\**" />
		<EmbeddedResource Remove="ClientApp\src\NewFolder\**" />
		<None Remove="$(SpaRoot)**" />
		<None Remove="ClientApp\build\**" />
		<None Remove="ClientApp\src\NewFolder\**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Base.Boundary\Base.Boundary.csproj" />
		<ProjectReference Include="..\Base.Core\Base.Core.csproj" />
		<ProjectReference Include="..\Core.BatchJobService\Core.BatchJobService.csproj" />
		<ProjectReference Include="..\Data.Boundary\Data.Boundary.csproj" />
		<ProjectReference Include="..\Data.GenericWebScaffold\Data.GenericWebScaffold.csproj" />
		<ProjectReference Include="..\Integration.Managers\Integration.Managers.csproj" />
		<ProjectReference Include="..\Integration.MicroServiceGraph\Integration.MicroServiceGraph.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Content Update="LanguagePath\en.json">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="LanguagePath\Languages.json">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="LanguagePath\tr.json">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Update="Properties\Resources.resx">
			<Generator>ResXFileCodeGenerator</Generator>
			<LastGenOutput>Resources.Designer.cs</LastGenOutput>
		</EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
		<Folder Include="ClientApp\public\assets\img\idimages\" />
		<Folder Include="ClientApp\public\assets\img\proofimages\" />
		<Folder Include="ClientApp\public\assets\img\studentcertificateimages\" />
		<Folder Include="ClientApp\public\assets\ticketfiles\" />
		<Folder Include="ClientApp\src\WebGraph\TagComponents\Pages\GlobalPages\" />
		<Folder Include="DefaultDataPath\" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="Properties\Resources.Designer.cs">
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	    <DependentUpon>Resources.resx</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <None Update="ClientApp\kill-node.bat">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	  <None Update="ClientApp\public\google74f2107a8f7e8ae4.html">
	    <CopyToOutputDirectory>Never</CopyToOutputDirectory>
	  </None>
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)build\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<!--<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
	  <Exec Command="tasklist /fi &quot;imagename eq node.exe&quot; |find &quot;:&quot; &gt; nul&#xD;&#xA;if errorlevel 1 taskkill /f /im &quot;node.exe&quot;" />
	</Target>-->

</Project>
